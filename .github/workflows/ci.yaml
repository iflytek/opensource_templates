name: Github Action Build Docker WorkFlows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '*.md'
      - '*.yml'
      - 'docs/**'

jobs:
  Building:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #aws-region: ap-east-1
          aws-region: us-east-1

      - name: Get repo name
        id: repoName
        run: echo "::set-output name=reponame::$(echo ${{github.repository}} | cut -d '/' -f 2)"

      - name: Build and Push to ECR public
        id: build-and-push
        uses: pahud/ecr-public-action@0db8adbcfd3c3ec2f604d70fdd6b5d15c80e1dbc
        with:
          dockerfile: docker/golang/Dockerfile
          context: .
          create_repo: ${{ steps.repoName.outputs.reponame }}
          tags: |
            public.ecr.aws/iflytek-open/${{ steps.repoName.outputs.reponame }}:latest
        

#      - name: Build, tag, and push image to Amazon ECR public
#        env:
#          ECR_REGISTRY: public.ecr.aws/iflytek-open
#          ECR_REPOSITORY: my-ecr-repo
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -f docker/golang/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG




